version: CircleCI 2.0
jobs: # a collection of steps
  build: runs not using Workflows must have a `build` job as entry point
    working_directory: ~/sec-group-broker-filter # directory where steps will run
    docker: # run the steps with Docker
        List of images at <https://hub.docker.com/r/circleci/openjdk/tags>
         - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
     - image: circleci/openjdk:14-jdk-buster-node-browsers-legacy with this image as the primary container; this is where all `steps` will run
      - image: circleci/openjdk:8-jdk-buster-node-browsers-legacy with this image as the primary container; this is where all `steps` will run
       -steps:  check out source code to working directory
      - run: 
          name: Generate cumulative pom.xml checksum
          command: |
            find: 
            -type f 
            -name "pom.xml"
            -exec: sh 
            -c 
            "sha256sum {} >>
            ~/pom-checksum.tmp" \;
            sort -o
            ~/pom-checksum 
            ~/pom-checksum.tmp
          when: daily
      - restore_cache:
          key: sec-group-broker-filter-{{ checksum "~/pom-checksum" }}
#      - run: mvn dependency:go-offline # gets the project dependencies
      - run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies #gets the project dependencies include submodules
      - run: mvn package # also run the actual tests
      - run: mvn surefire-report:report-only surefire-report:failsafe-report-only #  package a report without rerunning tests
      - save_cache: # saves the project dependencies once surefire
          paths:
            - ~/.m2
          key: sec-group-broker-filter-{{ checksum "~/pom-checksum" }}
      # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      # See https://circleci.com/docs/2.0/collect-test-data/#maven-surefire-plugin-for-java-junit-results
      - run:
          name: Save test results
          # pending aggregation of multi modules report into a single html file
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
            for f in $(find . -type f -regex ".*/target/site/.*.html"); do module=$(echo "$f" | cut -d "/" -f2); shortname=$(basename $f); cp $f ~/test-results/junit/${module}_${shortname}; done
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: save jar artefacts
          command: |
            mkdir -p ./artefacts/
            find . -path '**/target/*.jar' -exec cp {} ./artefacts/ \;
          when: always
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - store_artifacts:
          path: ./artefacts
