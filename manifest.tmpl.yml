---
applications:
- name: <broker_app_name>
  instances: 1
  memory: 256M
  host: <broker_hostname>
  domain: <my-admin-domain.cf.io>
  path: sec-group-broker-filter-<LATEST_RELEASE_VERSION>.jar
  env:
    # Where to send received traffic
    BROKER_FILTER_URL: <broker_url>
    # basic auth credentials to use while sending traffic
    BROKER_FILTER_USER: <broker_user>
    BROKER_FILTER_PASSWORD: <broker_password>
    #avoid service offering conflict.
    #add suffix to exiting service offering so that filter broker offering and target broker offering can exit at the same time
    #BROKER_FILTER_SERVICEOFFERING_SUFFIX=-sec

    # WARNING : not yet implemented. Where traffic will be received from
    #UPSTREAM.ID.INTERMEDIATE_ROUTE=sec-group-chained-mysql-broker.mydomain.org
    # WARNING : not yet implemented. Range of IP adress into which matching IP in returned credentials will triger opening of security groups
    # Outside this range, the bind request is transparently proxies without triggering any CC API action.
    #UPSTREAM.ID.WHITE_LISTED_CIDRs="192.168.3.1/24,192.168.4.1/32"

    # CloudFoundry CC api host
    CLOUDFOUNDRY_HOST: <cc_api_host>
    # CloudFoudry user with Org admin privileges on orgs where services will be bound
    CLOUDFOUNDRY_USER: <cloudfoundry_user>
    # CloudFoudry user password
    CLOUDFOUNDRY_PASSWORD: <cloudfoundry_password>